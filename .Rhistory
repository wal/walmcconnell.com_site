scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.minor = element_blank(),
# Bold, bigger title
plot.title = element_text(face = "bold", size = rel(1.7)),
# Plain, slightly bigger subtitle that is grey
plot.subtitle = element_text(face = "plain", size = rel(1.3), color = "grey70"),
# Italic, smaller, grey caption that is left-aligned
plot.caption = element_text(face = "italic", size = rel(0.7),
color = "grey70", hjust = 0),
# Bold legend titles
legend.title = element_text(face = "bold"),
# Bold, slightly larger facet titles that are left-aligned for the sake of repetition
strip.text = element_text(face = "bold", size = rel(1.1), hjust = 0),
# Bold axis titles
axis.title = element_text(face = "bold"),
# Add some space above the x-axis title and make it left-aligned
axis.title.x = element_text(margin = margin(t = 10), hjust = 0),
# Add some space to the right of the y-axis title and make it top-aligned
axis.title.y = element_text(margin = margin(r = 10), hjust = 1))
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.minor = element_blank(),
# Bold, bigger title
plot.title = element_text(face = "bold", size = rel(1.7)),
# Plain, slightly bigger subtitle that is grey
plot.subtitle = element_text(face = "plain", size = rel(1.3), color = "grey70"),
# Italic, smaller, grey caption that is left-aligned
plot.caption = element_text(face = "italic", size = rel(0.7),
color = "grey70", hjust = 0),
# Bold legend titles
legend.title = element_text(face = "bold"),
# Bold, slightly larger facet titles that are left-aligned for the sake of repetition
strip.text = element_text(face = "bold", size = rel(1.1), hjust = 0),
# Bold axis titles
axis.title = element_text(face = "bold"),
# Add some space above the x-axis title and make it left-aligned
axis.title.x = element_text(margin = margin(t = 10), hjust = 0),
# Add some space to the right of the y-axis title and make it top-aligned
axis.title.y = element_text(margin = margin(r = 10), hjust = 1))
day_chart + line_chart + plot_layout(ncol = 1)
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank()) +
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank())
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank())
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank())
day_chart + line_chart + plot_layout(ncol = 1)
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank())
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank())
day_chart + line_chart + plot_layout(ncol = 1)
day_chart
plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal() +
theme(legend.position='bottom')
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal() +
theme(legend.position='bottom')
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(legend.position='bottom') +
theme(panel.grid.minor = element_blank())
day_chart + line_chart + plot_layout(ncol = 1)
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
#guides(fill = FALSE) +
labs(title = "Subway Challenge 2020",
subtitle = "Run 394kms in 15 weeks",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal() +
theme(legend.position='bottom')
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal() +
theme(legend.position='bottom')
day_chart + line_chart + plot_layout(ncol = 1)
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
labs(title = "Runs per week",
subtitle = "Need to average 4, 7.5km runs per week ",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal() +
theme(legend.position='bottom')
line_chart <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
ggplot(aes(start_date, total_distance)) + geom_line() +
geom_hline(yintercept = 394) +
theme_minimal() +
theme(legend.position='bottom')
day_chart + line_chart + plot_layout(ncol = 1)
plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
arrrange(start_date) %>%
mutate(n = row_number())
plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
arrange(start_date) %>%
mutate(n = row_number())
plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance)) %>%
arrange(start_date) %>%
mutate(n = n() - row_number())
plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance))
cumsum_distance_data %>%
filter(!is.na(total_distance))
cumsum_distance_data <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance))
cumsum_distance_data %>%
filter(!is.na(total_distance))
cumsum_distance_data %>%
arrange(start_date) %>%
filter(!is.na(total_distance)) %>%
summarise(start_date = last(start_date), distance = last(distance))
cumsum_distance_data %>%
arrange(start_date) %>%
filter(!is.na(total_distance)) %>%
summarise(start_date = last(start_date), distance = last(total_distance))
latest_value <- cumsum_distance_data %>%
arrange(start_date) %>%
filter(!is.na(total_distance)) %>%
summarise(start_date = last(start_date), distance = last(total_distance))
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label_repel(data = latest_value,
aes(label = total_distance),
color = "white") +
geom_hline(yintercept = 394, color = "orange", size = 2) +
labs(title = "Progress towards 394km",
y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label(data = latest_value,
aes(label = total_distance),
color = "white") +
geom_hline(yintercept = 394, color = "orange", size = 2) +
labs(title = "Progress towards 394km",
y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
latest_value <- cumsum_distance_data %>%
arrange(start_date) %>%
filter(!is.na(total_distance)) %>%
summarise(start_date = last(start_date),
total_distance = last(total_distance))
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label(data = latest_value,
aes(label = total_distance),
color = "white") +
geom_hline(yintercept = 394, color = "orange", size = 2)
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label(data = latest_value,
aes(label = total_distance),
color = "white") +
geom_hline(yintercept = 394, color = "orange", size = 2) +
labs(title = "Progress towards 394km",
y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label(data = latest_value,
aes(label = paste0(total_distance, 'km')),
color = "darkgreen") +
geom_hline(yintercept = 394, color = "orange", size = 2) +
geom_abline(intercept = 0, slope = 5) +
labs(title = "Progress towards 394km",
y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label(data = latest_value,
aes(label = paste0(total_distance, 'km')),
color = "darkgreen") +
geom_hline(yintercept = 394, color = "orange", size = 2) +
geom_abline(intercept = 0, slope = 10) +
labs(title = "Progress towards 394km",
y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_label(data = latest_value,
aes(label = paste0(total_distance, 'km')),
color = "darkgreen") +
geom_abline(intercept = 5, slope = 10) +
geom_hline(yintercept = 394, color = "orange", size = 2) +
labs(title = "Progress towards 394km",
y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
?geom_abline
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
labs(title = "Runs per week",
subtitle = "Need to average 4, 7.5km runs per week ",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal() +
theme(legend.position='bottom')
cumsum_distance_data <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance))
latest_value <- cumsum_distance_data %>%
arrange(start_date) %>%
filter(!is.na(total_distance)) %>%
summarise(start_date = last(start_date),
total_distance = last(total_distance))
line_chart <- cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_abline() +
geom_line(color = "darkgreen", size = 2) +
#geom_label(data = latest_value,
#                 aes(label = paste0(total_distance, 'km')),
#                 color = "darkgreen") +
#geom_hline(yintercept = 394, color = "orange", size = 2) +
#labs(title = "Progress towards 394km",
#     y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
day_chart + line_chart + plot_layout(ncol = 1)
?geom_abline
plot_data %>%
mutate(daily_target = 3.75) %>%
mutate(total_target = cumsum(daily_target))
plot_data %>%
mutate(daily_target = 3.75) %>%
mutate(total_target = cumsum(daily_target))
plot_data
plot_data
plot_data %>%
mutate(daily_target = 3.75) %>%
mutate(total_target = cumsum(daily_target))
plot_data %>%
mutate(total_target = cumsum(3.75))
target <- plot_data %>%
mutate(daily_target = 3.75) %>%
mutate(total_target = cumsum(daily_target))
library(tidyverse)
library(ggTimeSeries)
library(lubridate)
library(patchwork)
library(plotly)
plot_data <- read_csv('data/wal_strava.csv')
day_chart <- plot_data %>%
ggplot_calendar_heatmap('start_date',
'distance',
dayBorderSize = 0.25,
dayBorderColour = "grey50",
monthBorderSize = 1,
monthBorderColour = "grey50",
monthBorderLineEnd = "round"
) +
scale_fill_gradient(low="grey80", high="darkgreen") +
labs(title = "Runs per week",
subtitle = "Need to average 4, 7.5km runs per week ",
fill = "Run Distance (Km) ",
y = NULL, x = NULL) +
facet_null() +
theme_minimal() +
theme(legend.position='bottom')
cumsum_distance_data <- plot_data %>%
arrange(start_date) %>%
mutate(total_distance = cumsum(distance)) %>%
mutate(total_distance = ifelse(start_date > today(), NA, total_distance))
latest_value <- cumsum_distance_data %>%
arrange(start_date) %>%
filter(!is.na(total_distance)) %>%
summarise(start_date = last(start_date),
total_distance = last(total_distance))
target <- plot_data %>%
mutate(daily_target = 3.75) %>%
mutate(total_target = cumsum(daily_target))
line_chart <- cumsum_distance_data %>%
ggplot(aes(start_date, total_distance)) +
geom_line(color = "darkgreen", size = 2) +
geom_line(data = target, aes(x = start_date, y = total_target), color = "darkgreen", size = 2) +
#geom_label(data = latest_value,
#                 aes(label = paste0(total_distance, 'km')),
#                 color = "darkgreen") +
#geom_hline(yintercept = 394, color = "orange", size = 2) +
#labs(title = "Progress towards 394km",
#     y = NULL, x = NULL) +
theme_minimal() +
theme(legend.position='bottom')
day_chart + line_chart + plot_layout(ncol = 1)
